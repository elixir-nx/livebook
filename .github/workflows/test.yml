name: Test
on:
  pull_request:
  push:
    branches:
      - main
      - "v*.*"
jobs:
  windows:
    runs-on: windows-latest
    env:
      MIX_ENV: test
      ELIXIR_ERL_OPTIONS: "-epmd_module Elixir.Livebook.EPMD"
    steps:
      - name: Configure Git
        run: git config --global core.autocrlf input
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Read ./versions
        shell: bash
        run: |
          . versions
          echo "elixir=$elixir" >> $GITHUB_ENV
          echo "otp=$otp" >> $GITHUB_ENV
          echo "openssl=$openssl" >> $GITHUB_ENV
      - name: Install Erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          version-type: strict
          otp-version: ${{ env.otp }}
          elixir-version: ${{ env.elixir }}
      - name: Start epmd
        run: $(elixir -e 'IO.puts "#{:code.root_dir()}/erts-#{:erlang.system_info(:version)}"')/bin/epmd.exe -daemon
        shell: bash
      # Add tar that supports symlinks, see https://github.com/actions/virtual-environments/issues/4679
      - name: Add tar.exe
        run: |
          "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      - name: Cache Mix
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.elixir }}-${{ env.otp }}-${{ hashFiles('**/mix.lock') }}
          # Reinstalling deps fails on Windows in rare cases, so we always use a new cache
          # restore-keys: |
          #   ${{ runner.os }}-mix-${{ env.elixir }}-${{ env.otp }}-
      - name: Install mix dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
      - name: Build the app
        run: bash .github/scripts/app/build_windows.sh
